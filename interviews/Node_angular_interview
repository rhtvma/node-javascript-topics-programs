Company : Altran (Aricent)

1: Diff b/w Angular 1 & Angular 2+

2: Diff b/w Promise and Observables.

3: Internal working of Observables. (Chaining, cancalation etc.)

4: Observals Operators and its uses.

5: What is lazyloading? how to achieve it. 

-------------------------------End of Altran----------------------------------


Silver Push Nodejs: JavaScript Questions:

1) Difference between window.onload and document.ready
2) What is the o/p of following:
3 + true * 2
3 * true *2

3) Different between undefined and null

4) Difference between == and ===

5) what are the benefits of arrow operator

6) what is the artecture of AngularJS

7) Factory methods in JavaScript

8) What design patterns follow node.js

9) If there are two ng-repeat one inside another, both are using tracking by index...
How to access parent(upper) ng-repeat index inside child ng-repeat

10) Global variable in node.js

11) How node.js work

12) How c++ work with node.js.

13) Are we write c++ code in v8 engine (I don't remember exactly)
14) Benefits of async/await

---------------------------------------------------------------------------------
Tech Mahindra : Telephonic

1. What is property binding
2. Can we use property binding in a directive

3. Diff between inner join and outer join

4. Node js : What is middleware function, what is its use

5. What is use of next callback.

---------------------------------------------------------------------------------
Policy Bazar : 
1: diff between var, let , const

2: const array1= {};
array1.age= 40: 
Will work or not 

3: sort an array and also tell it's time complexity
4: array.filter()


Create custom array.filter function.


5: array  =[2,2,3,6,3,2,7,8,2,9]

Find maximum occupancy of a number

let array1 = [func1(), func2(), func3(), func4(), func5(), func6(), func7(), func8()];

Loop through array1 and execute 2 functions at a time, after completion of any one execute another function and so on.

Factorial of numbers using recursive function

a : query using group by
b : maximum salary
c : 2nd highest salary
d : nth highest salary


1: 
console.log('a');
abc = () => {
    "use strict";
    setTimeout(() => {
        console.log("b");
    }, 0);
}
console.log('c');
abc();
console.log('d');


2:
console.log('a');
abc = (a,b) => {
    "use strict";
    // setTimeout(() => {
        console.log(a+b);
    // }, 0);
}
console.log('c');
abc(2,6);
console.log('d');

3:
what is promise and async/await?

4: promises and observels

5:
design pattern ?

6: 
event loop?

7:
event loop in javascript ? how it works?

8:
what is scope collision?

9:
how do you formate date in javascript ? using which npm module
ans: moment

10:
how to further sort groupby data in mysql

11:
what is dependency injection (in node and angular)

12:
angular 5:
 how do you share data between two contollers ?
 
 
13: 
how @input and @output works?

14: Explain flow of @input and @output
scenario 1: Parent to child
scenario 2: child to parent
scenario 3: child to child

In angular we having drop-down. Data is coming from some micro service.

But same time we want to call another micro service for getting count of some fields in that drop down based on first data..

Explain this via dependency injection how will you perform..


Clue : There is are two types of dependency injection... 
1. Functional dependency 
2. 




